# Generated by Django 5.2.4 on 2025-08-10 14:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Utente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("PRES_REGIONE", "Presidente di Regione"),
                            ("PRES_SQUADRA", "Presidente di Squadra"),
                            ("ALLENATORE", "Allenatore"),
                            ("ATLETA", "Atleta"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="utenti_custom",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="utenti_custom",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utente",
                "verbose_name_plural": "Utenti",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Regione",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Specialita",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Squadra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Atleta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stato",
                    models.CharField(
                        choices=[("SANO", "Sano"), ("INFORTUNATO", "Infortunato")],
                        default="SANO",
                        max_length=15,
                    ),
                ),
                (
                    "utente",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "squadra",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="DBProject.squadra",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PresidenteSquadra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "utente",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "squadra",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="DBProject.squadra",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Allenatore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "utente",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "squadra",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="DBProject.squadra",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PresidenteRegione",
            fields=[
                (
                    "utente",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "regione",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DBProject.regione",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Gara",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("luogo", models.CharField(max_length=200)),
                ("data_inizio", models.DateField()),
                ("data_fine", models.DateField()),
                (
                    "id_presidente_regione",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DBProject.presidenteregione",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Partecipazione",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("risultato", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "stato_iscrizione",
                    models.CharField(
                        choices=[
                            ("ISCRITTO", "Iscritto"),
                            ("COMPLETATO", "Completato"),
                            ("SQUALIFICATO", "Squalificato"),
                        ],
                        default="ISCRITTO",
                        max_length=20,
                    ),
                ),
                (
                    "id_atleta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DBProject.atleta",
                    ),
                ),
                (
                    "id_gara",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="DBProject.gara"
                    ),
                ),
                (
                    "id_specialita",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DBProject.specialita",
                    ),
                ),
            ],
            options={
                "verbose_name": "Partecipazione",
                "verbose_name_plural": "Partecipazioni",
                "unique_together": {("id_atleta", "id_gara", "id_specialita")},
            },
        ),
        migrations.CreateModel(
            name="GaraSpecialita",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sesso",
                    models.CharField(
                        choices=[("M", "Maschile"), ("F", "Femminile")], max_length=1
                    ),
                ),
                (
                    "id_gara",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="DBProject.gara"
                    ),
                ),
                (
                    "id_specialita",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DBProject.specialita",
                    ),
                ),
            ],
            options={
                "verbose_name": "Gara Specialità",
                "verbose_name_plural": "Gare Specialità",
                "unique_together": {("id_gara", "id_specialita", "sesso")},
            },
        ),
    ]
